name: ppx_42 pipeline

on:
  push:
    branches:
      - master
    tags:
      - v*
  pull_request:
    branches:
      - master

jobs:
  test_and_build:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install esy
        run: |
          npm install -g esy@0.5.8
      - name: '[Cache] calculate esy store path (win)'
        id: print_esy_cache_win
        if: matrix.os == 'windows-latest'
        run: |
          # COMPUTE THE ESY INSTALL CACHE LOCATION AHEAD OF TIME
          # Note: This will need to change when upgrading esy version
          # that reenables long paths on windows.
          DESIRED_LEN="33"
          HOME_ESY3="$HOME/.esy/3"
          HOME_ESY3_LEN=${#HOME_ESY3}
          NUM_UNDERS=$(echo "$(($DESIRED_LEN-$HOME_ESY3_LEN))")
          UNDERS=$(printf "%-${NUM_UNDERS}s" "_")
          UNDERS="${UNDERS// /_}"
          THE_ESY__CACHE_INSTALL_PATH=${HOME_ESY3}${UNDERS}/i
          THE_ESY__CACHE_INSTALL_PATH=$( cygpath --mixed --absolute "$THE_ESY__CACHE_INSTALL_PATH")
          echo "THE_ESY__CACHE_INSTALL_PATH: $THE_ESY__CACHE_INSTALL_PATH"
          # This will be exposed as an step var esy_cache_path
          echo "##[set-output name=esy_cache_path;]$THE_ESY__CACHE_INSTALL_PATH"
        shell: bash
      - name: '[Cache] calculate esy store path (non-win)'
        id: print_esy_cache_non_win
        if: matrix.os != 'windows-latest'
        run: |
          # COMPUTE THE ESY INSTALL CACHE LOCATION AHEAD OF TIME
          DESIRED_LEN="86"
          HOME_ESY3="$HOME/.esy/3"
          HOME_ESY3_LEN=${#HOME_ESY3}
          NUM_UNDERS=$(echo "$(($DESIRED_LEN-$HOME_ESY3_LEN))")
          UNDERS=$(printf "%-${NUM_UNDERS}s" "_")
          UNDERS="${UNDERS// /_}"
          THE_ESY__CACHE_INSTALL_PATH=${HOME_ESY3}${UNDERS}/i
          echo "THE_ESY__CACHE_INSTALL_PATH: $THE_ESY__CACHE_INSTALL_PATH"
          # This will be exposed as an step var esy_cache_path
          echo "##[set-output name=esy_cache_path;]$THE_ESY__CACHE_INSTALL_PATH"
        shell: bash
      - name: '[Cache] Maybe restore esy cache (win)'
        id: esy-cache-win
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v1
        with:
          path: ${{ steps.print_esy_cache_win.outputs.esy_cache_path }}
          key: v1-esy-${{ matrix.os }}-${{ hashFiles('**\index.json') }}
      - name: '[Cache] Maybe restore esy cache (non-win)'
        id: esy-cache-non-win
        if: matrix.os != 'windows-latest'
        uses: actions/cache@v1
        with:
          path: ${{ steps.print_esy_cache_non_win.outputs.esy_cache_path }}
          key: v1-esy-${{ matrix.os }}-${{ hashFiles('**/index.json') }}
      - name: esy install and build
        run: |
          esy install 
          esy build
      - name: Upload artifacts ${{ matrix.os }}
        uses: actions/upload-artifact@master
        with:
          name: ${{ matrix.os }}
          path: _esy/default/build/default/bin/Bin.exe

  publish:
    if: github.event_name != 'pull_request'
    needs: test_and_build
    name: Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "12.x"
          registry-url: "https://registry.npmjs.org"

      - name: Download linux artifacts
        uses: actions/download-artifact@master
        with:
          name: ubuntu-latest
          path: binaries/linux

      - name: Download macOS artifacts
        uses: actions/download-artifact@master
        with:
          name: macOS-latest
          path: binaries/darwin

      - name: Download windows artifacts
        uses: actions/download-artifact@master
        with:
          name: windows-latest
          path: binaries/windows

      - name: Move artifacts
        run: |
          mkdir -p bin
          mv binaries/darwin/bin.exe bin/ppx_42-darwin-x64.exe
          mv binaries/windows/bin.exe bin/ppx_42-win-x64.exe
          mv binaries/linux/bin.exe bin/ppx_42-linux-x64.exe

      - name: Publish
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
