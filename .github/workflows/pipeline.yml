name: ppx_42 pipeline

on:
  pull_request:
    branches:
      - master

jobs:
  test_and_build:
    name: Test on node ${{ matrix.node_version }} and ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [12.x]
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v1
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: setup
        run: |
          npm install -g esy@0.5.8
      - name: '[Cache] calculate esy store path'
        run: |
          # COMPUTE THE ESY INSTALL CACHE LOCATION AHEAD OF TIME
          DESIRED_LEN="86"
          # Note: This will need to change when upgrading esy version
          # that reenables long paths on windows.
          if [ "$AGENT_OS" == "Windows_NT" ]; then
            DESIRED_LEN="33"
          fi
          HOME_ESY3="$HOME/.esy/3"
          HOME_ESY3_LEN=${#HOME_ESY3}
          NUM_UNDERS=$(echo "$(($DESIRED_LEN-$HOME_ESY3_LEN))")
          UNDERS=$(printf "%-${NUM_UNDERS}s" "_")
          UNDERS="${UNDERS// /_}"
          THE_ESY__CACHE_INSTALL_PATH=${HOME_ESY3}${UNDERS}/i
          if [ "$AGENT_OS" == "Windows_NT" ]; then
            THE_ESY__CACHE_INSTALL_PATH=$( cygpath --mixed --absolute "$THE_ESY__CACHE_INSTALL_PATH")
          fi
          echo "THE_ESY__CACHE_INSTALL_PATH: $THE_ESY__CACHE_INSTALL_PATH"
          # This will be exposed as an env var ESY__CACHE_INSTALL_PATH, or an
          # Azure var esy__cache_install_path
          echo "##vso[task.setvariable variable=esy__cache_install_path]$THE_ESY__CACHE_INSTALL_PATH"
        shell: bash
      - name: Try to restore dependencies cache
        id: esy-cache-win
        if: matrix.os == 'windows-latest'
        uses: actions/cache@v1
        with:
          path: $(ESY__CACHE_INSTALL_PATH)
          key: v1-esy-${{ matrix.os }}-${{ hashFiles('**\index.json') }}
      - name: Try to restore dependencies cache
        id: esy-cache-non-win
        if: matrix.os != 'windows-latest'
        uses: actions/cache@v1
        with:
          path: $(ESY__CACHE_INSTALL_PATH)
          key: v1-esy-${{ matrix.os }}-${{ hashFiles('**/index.json') }}
      - name: install-build
        run: |
          esy install 
          esy build
